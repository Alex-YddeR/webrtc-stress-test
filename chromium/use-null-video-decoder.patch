diff --git a/video/video_receive_stream.cc b/video/video_receive_stream.cc
index da8eb7de60..28ccad9b7a 100644
--- a/video/video_receive_stream.cc
+++ b/video/video_receive_stream.cc
@@ -331,8 +331,10 @@ void VideoReceiveStream::Start() {
   }
 
   for (const Decoder& decoder : config_.decoders) {
-    std::unique_ptr<VideoDecoder> video_decoder =
-        config_.decoder_factory->CreateVideoDecoder(decoder.video_format);
+    std::unique_ptr<VideoDecoder> video_decoder = NULL;
+    if (!getenv("USE_NULL_VIDEO_DECODER")) {
+        video_decoder = config_.decoder_factory->CreateVideoDecoder(decoder.video_format);
+    }
     // If we still have no valid decoder, we have to create a "Null" decoder
     // that ignores all calls. The reason we can get into this state is that the
     // old decoder factory interface doesn't have a way to query supported
diff --git a/video/video_receive_stream2.cc b/video/video_receive_stream2.cc
index c929f07616..46c7fabee5 100644
--- a/video/video_receive_stream2.cc
+++ b/video/video_receive_stream2.cc
@@ -468,8 +468,10 @@ void VideoReceiveStream2::CreateAndRegisterExternalDecoder(
     const Decoder& decoder) {
   TRACE_EVENT0("webrtc",
                "VideoReceiveStream2::CreateAndRegisterExternalDecoder");
-  std::unique_ptr<VideoDecoder> video_decoder =
-      config_.decoder_factory->CreateVideoDecoder(decoder.video_format);
+  std::unique_ptr<VideoDecoder> video_decoder = NULL;
+  if (!getenv("USE_NULL_VIDEO_DECODER")) {
+     video_decoder = config_.decoder_factory->CreateVideoDecoder(decoder.video_format);
+  }
   // If we still have no valid decoder, we have to create a "Null" decoder
   // that ignores all calls. The reason we can get into this state is that the
   // old decoder factory interface doesn't have a way to query supported
